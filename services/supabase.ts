
import { createClient } from '@supabase/supabase-js';
import type { Lead } from '../types';

// ATENÇÃO: Substitua com a URL e a chave anônima do seu projeto Supabase.
// Você pode encontrar esses valores nas configurações do seu projeto em Settings > API.
// Para segurança, é recomendado usar variáveis de ambiente.
const supabaseUrl = 'https://qenetqqwujznoexlvvvm.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFlbmV0cXF3dWp6bm9leGx2dnZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg4MDc0NDYsImV4cCI6MjA3NDM4MzQ0Nn0.mNAwxUGbm44EgrG8lJ2nz4EfbE3Bq1aNc7G-5oRmamk';

// Crie uma única instância do cliente Supabase.
// É seguro expor a chave anônima (anon key) no lado do cliente,
// desde que você tenha ativado a Segurança de Nível de Linha (RLS) em suas tabelas.
export const supabase = createClient(supabaseUrl, supabaseAnonKey);

/**
 * Salva um novo lead (nome e email) na tabela 'leads' do Supabase.
 * @param lead - Um objeto contendo o nome e o email do lead.
 * @returns Uma promessa que resolve para os dados inseridos ou lança um erro.
 */
export const saveLead = async (lead: Lead): Promise<any> => {
  // Simulação para ambiente de desenvolvimento sem credenciais reais.
  // Remova ou comente este bloco ao usar suas credenciais reais do Supabase.
  if (supabaseUrl.includes('your-project-id')) {
    console.warn("Atenção: Supabase não configurado. Usando uma simulação de API. Os dados NÃO serão salvos.");
    return new Promise(resolve => setTimeout(() => {
      console.log('Lead simulado salvo:', lead);
      resolve({ data: [lead], error: null });
    }, 1000));
  }
  
  // Implementação real do Supabase
  const { data, error } = await supabase
    .from('leads') // Certifique-se de que sua tabela se chama 'leads'
    .insert([
      { name: lead.name, email: lead.email },
    ])
    .select();

  if (error) {
    console.error('Erro ao salvar lead no Supabase:', error);
    throw new Error(error.message);
  }

  return data;
};

/*
  ==============================================================
  INSTRUÇÕES PARA CONFIGURAR O SUPABASE
  ==============================================================

  1. Crie um projeto em https://supabase.com/
  2. Vá para "SQL Editor" no menu lateral.
  3. Clique em "New query" e cole o seguinte código SQL para criar sua tabela e configurar as permissões.
  4. Execute a query.

  --- INÍCIO DO CÓDIGO SQL ---

  -- 1. Criar a tabela para armazenar os leads
  CREATE TABLE public.leads (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    name text NULL,
    email text NULL,
    CONSTRAINT leads_pkey PRIMARY KEY (id),
    CONSTRAINT leads_email_key UNIQUE (email) -- Opcional: Evita emails duplicados
  );

  -- 2. Habilitar a Segurança de Nível de Linha (RLS)
  -- Isso garante que seus dados fiquem protegidos por padrão.
  ALTER TABLE public.leads ENABLE ROW LEVEL SECURITY;

  -- 3. Criar uma política que permite inserções públicas
  -- Isso permite que qualquer pessoa (mesmo sem estar logada) envie o formulário.
  CREATE POLICY "Enable public insert for all users" ON public.leads
  FOR INSERT
  WITH CHECK (true);

  -- 4. Opcional: Impedir que os dados sejam lidos publicamente
  -- Esta política impede que qualquer pessoa selecione/leia dados da tabela.
  -- Sem uma política de SELECT, ninguém pode ler.
  -- Se precisar ler os dados, crie uma política de SELECT apropriada para usuários autenticados.

  --- FIM DO CÓDIGO SQL ---
*/
